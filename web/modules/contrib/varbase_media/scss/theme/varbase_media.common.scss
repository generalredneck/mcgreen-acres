@import "../defaults";   // Global defaults.

// Varbase media common library style.
// =============================================================================

picture,
img,
figure,
.media,
.embedded-entity {

  figcaption {
    display: block;
  }

  &.align-center {
    width: 100%;
    margin-block: 0.5rem 0.5rem;
    margin-inline: auto auto;

    > * {
      margin-inline: auto auto;
    }
  }

  &.align-right {
    margin-block: 0 0.5rem;
    margin-inline: 1rem 0;
  }

  &.align-left {
    margin-block: 0 0.5rem;
    margin-inline: 0 1rem;
  }
}

[dir="rtl"] picture,
[dir="rtl"] img,
[dir="rtl"] figure,
[dir="rtl"] .media,
[dir="rtl"] .embedded-entity {
  &.align-right {
    margin-inline: 0 1rem !important;
  }

  &.align-left {
    margin-inline: 1rem 0 !important;
  }
}

figure {
  &.figure-resized {
    .media.media--type-image {
      width: 100% !important;
    }

    &.align-right,
    &.align-left,
    &.align-center {

      .media--type-image.media-embed-resized,
      figcaption {
        width: 100% !important;
      }
    }

    &.align-center {
      display: block;
    }
  }
}

.media {
  &.media--type-remote-video,
  &.media--type-video {
    width: 100%;

    &.media--view-mode-large {
      width: 100%;
    }

    // Responsive medium video with containers that are 50% wide until a breakpoint.
    @each $breakpoint, $container-max-width in $container-max-widths {
      // Generate media query if needed.
      @include media-breakpoint-up($breakpoint) {
        &.media--view-mode-medium {
          min-width: math.div($container-max-width,$grid-columns) * 6;
          max-width: math.div($container-max-width,$grid-columns) * 6;

          .varbase-video-player {
            video,
            iframe {
              min-width: math.div($container-max-width,$grid-columns) * 6;
              max-width: math.div($container-max-width,$grid-columns) * 6;
            }
          }
        }
      }
    }

    // Responsive small video with containers that are 25% wide until a breakpoint.
    @each $breakpoint, $container-max-width in $container-max-widths {
      // Generate media query if needed.
      @include media-breakpoint-up($breakpoint) {
        &.media--view-mode-small {
          min-width: math.div($container-max-width,$grid-columns) * 3;
          max-width: math.div($container-max-width,$grid-columns) * 3;

          .varbase-video-player {
            video,
            iframe {
              min-width: math.div($container-max-width,$grid-columns) * 3;
              max-width: math.div($container-max-width,$grid-columns) * 3;
            }
          }
        }
      }
    }

  }

  &.media--type-image {

    &.media--view-mode-large {
      width: 100%;
    }

    &.media--view-mode-medium {
      width: 50%;
    }

    &.media--view-mode-small {
      width: 25%;
    }

    @include media-breakpoint-between(xs, lg) {
      &.media-embed-resized {
        &.media--view-mode-large,
        &.media--view-mode-medium,
        &.media--view-mode-small {
          width: 100% !important;
          min-width: 100% !important;

          &.align-center,
          &.align-right,
          &.align-left {
            width: 100% !important;
            min-width: 100% !important;
            margin-inline: 0 !important;
          }
        }
      }

      figure {
        &.align-center,
        &.align-right,
        &.align-left {
          width: 100% !important;
          min-width: 100% !important;

          .media-embed-resized {
            width: 100% !important;
            min-width: 100% !important;
            margin-inline: 0 !important;
          }
        }
      }
    }
  }

  &.media--type-remote-video
  &.media--bundle--image {
    .blazy img {
      width: auto;
      height: auto;
    }
  }
}
